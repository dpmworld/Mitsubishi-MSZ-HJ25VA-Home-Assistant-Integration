substitutions:
  mac: <macaddress>
  name: mitsubishi-ac-${mac}
  friendly_name: Mitsubishi MSZ-HJ25 (${mac})
  id_name: hvac_${mac}
  time_timezone: "Europe/Rome"

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  name_add_mac_suffix: False

esp32:
  board: esp32-s3-devkitc-1
  framework:
    #type: esp-idf
    type: arduino

# Enable logging
logger:
#  level: INFO
  logs:
    CN105Climate: INFO
    CN105: INFO
    SETTINGS: INFO
    CYCLE : INFO  
    Header: INFO 
    EVT_SETS: INFO
    sensor: INFO
    chkSum : INFO
    WRITE : INFO
    READ : INFO
    Decoder : INFO

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key

ota:
  - platform: esphome

time:
  - platform: homeassistant

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Msz-Hj25 Fallback Hotspot"
    password: !secret esp_password

captive_portal:

web_server:
  version: 3
  include_internal: True
  auth: 
    username: !secret esp_username
    password: !secret esp_password

uart:
  id: HP_UART
  baud_rate: 2400
  tx_pin: GPIO1
  rx_pin: GPIO2

# External component reference
external_components:
  - source: github://echavet/MitsubishiCN105ESPHome

# Climate entity configuration
#
#  CLIMATE_MODE_OFF = 0,
#  CLIMATE_MODE_HEAT_COOL = 1,
#  CLIMATE_MODE_COOL = 2,
#  CLIMATE_MODE_HEAT = 3,
#  CLIMATE_MODE_FAN_ONLY = 4,
#  CLIMATE_MODE_DRY = 5,
#  CLIMATE_MODE_AUTO = 6

climate:
  - platform: cn105
    id: hp
    name: ${friendly_name}
    icon: mdi:heat-pump
    on_state:
      - logger.log: "STATUS UPDATE"
      - lambda: |-
          if ( id(led_switch).state ) {
            switch ( x.mode ) {
              case 0: // CLIMATE_MODE_OFF = 0
                id(led).turn_off().perform();
                break;
              case 1: // CLIMATE_MODE_HEAT_COOL = 1
                id(led).turn_off();
                break;
              case 2: // CLIMATE_MODE_COOL = 2
                id(led).turn_on().set_rgb(0,0,1).perform();
                id(led).turn_on().set_brightness(.3).perform();
                break;
              case 3: // CLIMATE_MODE_HEAT = 3
                id(led).turn_on().set_rgb(.8,0,0).perform();
                id(led).turn_on().set_brightness(.3).perform();
                break;
              case 4: // CLIMATE_MODE_FAN_ONLY = 4
                id(led).turn_on().set_rgbw(0,0,0,1).perform();
                id(led).turn_on().set_brightness(.3).perform();
                break;
              case 5: // CLIMATE_MODE_DRY = 5
                id(led).turn_on().set_rgbw(.5,.7,1,.5).perform();
                id(led).turn_on().set_brightness(.3).perform();
                break;
              case 6: // CLIMATE_MODE_AUTO = 6
                id(led).turn_on().set_rgb(.3,1,1).perform();
                id(led).turn_on().set_brightness(.3).perform();
                break;
              default:
                id(led).turn_on().set_rgb(.3,.3,.3).perform();
                id(led).turn_on().set_brightness(.3).perform();
                ESP_LOGD("main", "Unknown status to set the led!");
                break;
            }
          } else {
            id(led).turn_off().perform();
          }
    supports:
      mode: [COOL, HEAT, FAN_ONLY, DRY]
      fan_mode: [AUTO, QUIET, LOW, MEDIUM, HIGH]
      swing_mode: ["OFF", VERTICAL]
    visual:
      min_temperature: 16
      max_temperature: 31
      temperature_step:
        target_temperature: 1
        current_temperature: 0.1
    hp_uptime_connection_sensor:
      name: Uptime Connection (${mac})
    compressor_frequency_sensor:
      name: Compressor Frequency (${mac})
    vertical_vane_select:
      name: Vertical Vane (${mac})
    isee_sensor:
      name: ISEE Sensor (${mac})
    remote_temperature_timeout: 30min
    debounce_delay : 500ms
    update_interval: 4s

text_sensor:
  - platform: version
    name: "ESPHome version"
    hide_timestamp: True
    disabled_by_default: True
  - platform: wifi_info
    ssid: 
      name: "Connected SSID"
      id: ${id_name}_connected_ssid
      entity_category: "Diagnostic"
      disabled_by_default: True
    ip_address:
      name: "IP Address"
      id: ${id_name}_ip_addr
      entity_category: "Diagnostic"
      disabled_by_default: True
    bssid:
      name: "Connected BSSID"
      id: ${id_name}_BSSID
      entity_category: "Diagnostic"
      disabled_by_default: True
    mac_address:
      name: "Mac Wifi Address"
      id: ${id_name}_mac_addr
      entity_category: "Diagnostic"
      disabled_by_default: True

sensor:
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: ${id_name}_wifi_signal_db
    update_interval: 60s
    entity_category: "Diagnostic"
    disabled_by_default: True

  - platform: copy # Reports the WiFi signal strength in %
    source_id: ${id_name}_wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "Diagnostic"
    device_class: ""
    disabled_by_default: True

light:
  - platform: esp32_rmt_led_strip
    name: Led
    id: led
    internal: true
    rgb_order: GRB
    pin: 35
    num_leds: 4
    rmt_channel: 1
    chipset: ws2812
#    restore_mode: ALWAYS_OFF

switch:
  - platform: restart
    name: "Restart"
    id: device_restart
    disabled_by_default: True
    entity_category: "Diagnostic"    

  - platform: template
    id: led_switch
    name: Status Led
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF 
